/*
 * MC3479.cpp
 *
 *  Created on: Oct 9, 2022
 *      Author: mmmta
 */

#include "../Inc/MC3479.h"


MC3479Class MC3479;


// Set the MC3479's I2C object and initialize the device I
bool MC3479Class::setSerialI2C(I2C_TypeDef * i2c, uint8_t devId)
{
	this->_I2C1 = i2c;
	this->I2C_DEVICE_ID = devId;
	return 1;
}

// Set the MC3479's SPI object
bool MC3479Class::setSerialSPI(SPI_HandleTypeDef * spi)
{

	return 1;
}


// Read from a register using SPI
uint8_t* MC3479Class::SPI_readRegister(uint8_t reg, GPIO_TypeDef csn)
{

	uint8_t ReadBytes

}

// Write to a register using SPI
uint8_t MC3479Class::SPI_writeRegister(uint8_t reg, uint8_t data)
{return 1;}

// Read from a register usinh I2C
uint8_t* MC3479Class::I2C_readRegister(uint8_t reg)
{}

// Write to a register using I2C
uint8_t MC3479Class::I2C_writeRegister(uint8_t reg, uint8_t data)
{return 1;}


// Perform the initial MC3479 hard-coded configuration
void MC3479Class::configAccelerometer(){


	return;

}

// Set the MC3479's I2C object and initialize the device I
bool MC3479Class::setSerialI2C(I2C_TypeDef * i2c, uint8_t devId){return 1;}

// Set the MC3479's SPI object
bool MC3479Class::setSerialSPI(SPI_HandleTypeDef * spi){return 1;}


